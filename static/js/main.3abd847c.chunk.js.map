{"version":3,"sources":["theme.js","components/appbar/AppBar.js","components/map/Toolbar.js","api/Shop.js","api/API.js","components/info/Info.js","components/map/ShopOverlay.js","components/map/Map.js","components/about/About.js","components/notice/ErrorNotice.js","App.js","serviceWorker.js","index.js","App.module.css"],"names":["createMuiTheme","palette","primary","secondary","typography","fontFamily","join","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","AppBar","onSearch","classes","useState","searchText","setSearchText","className","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","onChange","e","target","value","onKeyPress","charCode","blur","defaultProps","toolbar","zIndex","right","top","Toolbar","pending","onLocationButtonClick","onRenewButtonClick","ButtonGroup","orientation","aria-label","Button","disabled","onClick","GpsFixed","Autorenew","cancelFetchShopsByBounds","CancelToken","axios","Shop","lat","lng","radius","get","cancelToken","c","info","left","marginTop","fontSize","normal","indigo","textAlign","minWidth","soldOut","red","fontWeight","content","map","progress","bottom","Map","ErrorNotice","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","gutterBottom","style","DialogActions","App","setError","window","onerror","err","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"6OAGqBA,YAAe,CAClCC,QAAS,CACPC,YACAC,eAEFC,WAAY,CACVC,WAAY,CACV,gBACAC,KAAK,Q,yFCHLC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAM,aACJJ,SAAU,EACVK,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,OAAO,aACLC,SAAU,WACVC,aAAcZ,EAAMa,MAAMD,aAC1BE,gBAAiBC,YAAKf,EAAMR,QAAQwB,OAAOC,MAAO,KAClD,UAAW,CACTH,gBAAiBC,YAAKf,EAAMR,QAAQwB,OAAOC,MAAO,MAEpDC,WAAY,EACZC,MAAO,QACNnB,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BS,WAAYlB,EAAMK,QAAQ,GAC1Bc,MAAO,SAGXC,WAAY,CACVD,MAAOnB,EAAMK,QAAQ,GACrBgB,OAAQ,OACRV,SAAU,WACVW,cAAe,OACff,QAAS,OACTgB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,UAAYP,MAAO,QAE5BQ,WAAW,aACTC,QAAS5B,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAChCwB,WAAY7B,EAAM8B,YAAYC,OAAO,SACrCZ,MAAO,QACNnB,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BU,MAAO,IACP,UAAW,CACTA,MAAO,WAMTa,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAUpC,IADe,EAEKqC,mBAAS,IAFd,mBAExBC,EAFwB,KAEZC,EAFY,KAO/B,OACE,yBAAKC,UAAWJ,EAAQjC,MACtB,kBAAC,IAAD,CAAgBU,SAAS,SACvB,kBAAC,IAAD,KASE,kBAAC4B,EAAA,EAAD,CAAYD,UAAWJ,EAAQ5B,MAAOkC,QAAQ,KAAKC,QAAM,GAfnD,kCAkBN,yBAAKH,UAAWJ,EAAQxB,QACtB,yBAAK4B,UAAWJ,EAAQd,YACtB,kBAAC,IAAD,OAEF,kBAACsB,EAAA,EAAD,CACEC,YAtBc,6CAuBdT,QAAS,CACPjC,KAAMiC,EAAQT,UACdmB,MAAOV,EAAQP,YAEjBkB,WAAY,CAAE,aAAc,UAC5BC,SAAU,SAAAC,GAAC,OAAIV,EAAcU,EAAEC,OAAOC,QACtCA,MAAOb,EACPc,WAAY,SAAAH,GAC0B,KAAfA,EAAEI,WAErBlB,EAASG,GACTW,EAAEC,OAAOI,gBAW3BpB,EAAOqB,aAAe,CACpBpB,SAAU,cAGGD,I,oCC7GTlC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCsD,QAAQ,aACN3C,SAAU,QACV4C,OAAQ,MACRC,MAAOxD,EAAMK,QAAQ,GACrBoD,IAAKzD,EAAMK,QAAQ,GACnBS,gBAAiB,QAChBd,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BgD,IAAKzD,EAAMK,QAAQ,IACnBmD,MAAOxD,EAAMK,QAAQ,SAKrBqD,EAAU,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,QAASC,EAAgD,EAAhDA,sBAAuBC,EAAyB,EAAzBA,mBAC3C3B,EAAUpC,IAEhB,OACE,yBAAKwC,UAAWJ,EAAQoB,SACtB,kBAACQ,EAAA,EAAD,CACEC,YAAY,WACZvB,QAAQ,WACRd,MAAM,UACNsC,aAAW,iCAEX,kBAACC,EAAA,EAAD,CAAQC,SAAUP,EAASQ,QAAS,kBAAMP,MACxC,kBAACQ,EAAA,EAAD,OAGF,kBAACH,EAAA,EAAD,CAAQC,SAAUP,EAASQ,QAAS,kBAAMN,MACxC,kBAACQ,EAAA,EAAD,UAOVX,EAAQL,aAAe,CACrBO,sBAAuB,aACvBC,mBAAoB,c,OAGPH,IC7CJY,E,iCADLC,EAAcC,IAAMD,YAGbE,EAAb,2GACqBC,EAAKC,EAAKC,GAI3B,OAHIN,GACFA,IAEKE,IAAMK,IAAN,qFACyEH,EADzE,gBACoFC,EADpF,cAC6FC,GAClG,CACEE,YAAa,IAAIP,GAAY,SAAAQ,GAC3BT,EAA2BS,WATrC,K,GCCe,I,sCAHbN,KAAQ,IAAIA,GCAI1E,aAAW,SAAAC,GAAK,MAAK,CACrCgF,KAAM,CACJrE,SAAU,QACV4C,OAAQ,KACRzC,gBAAiB,kBACjBY,MAAO,OACPnB,QAAS,OACTiB,eAAgB,SAChBD,WAAY,SACZkC,IAAK,MACLwB,KAAM,MACN9D,MAAO,IACPE,OAAQ,GACR6D,WAAY,GACZhE,YAAa,IACbiE,SAAU,Q,cCXIpF,aAAW,SAAAC,GAAK,MAAK,CACrCoF,OAAQ,CACNxD,QAAS5B,EAAMK,QAAQ,GACvBS,gBAAiBuE,IAAO,KACxB3D,MAAO,OACP4D,UAAW,SACXC,SAAU,IAEZC,QAAS,CACP5D,QAAS5B,EAAMK,QAAQ,GACvBS,gBAAiB2E,IAAI,KACrB/D,MAAO,QAETpB,MAAO,CACL6E,SAAU,GACVO,WAAY,KAEdC,QAAS,CACPR,SAAU,Q,aCXIpF,aAAW,SAAAC,GAAK,MAAK,CACrC4F,IAAK,CACHzE,MAAO,OACPE,OAAQ,QAEVwE,SAAU,CACRlF,SAAU,QACV4C,OAAQ,KACRpC,MAAO,YCnBOpB,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJU,SAAU,QACV4C,OAAQ,KACRC,MAAO,EACPsC,OAAQ,EACR3E,MAAO,IACPgE,SAAU,GACVvD,QAAS5B,EAAMK,QAAQ,GACvBiF,UAAW,aDkOAS,I,oCE3MAC,EA3BK,WAAO,IAAD,EACA7D,oBAAS,GADT,mBACjB8D,EADiB,KACXC,EADW,KAElBC,EAAc,WAClBD,GAAQ,IAEV,OACE,kBAACE,EAAA,EAAD,CACEH,KAAMA,EACNI,QAASF,EACTG,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAhB,yCACA,kBAACC,EAAA,EAAD,KACE,kBAACnE,EAAA,EAAD,CAAYC,QAAQ,QAAQmE,cAAY,EAACC,MAAO,CAAEzB,SAAU,KAA5D,+GAIF,kBAAC0B,EAAA,EAAD,KACE,kBAAC5C,EAAA,EAAD,CAAQE,QAASgC,EAAazE,MAAM,WAApC,mBCGOoF,MArBf,WAAgB,IAAD,EACa3E,mBAAS,MADtB,mBACC4E,GADD,WAQb,OANA5E,oBAAS,WACP6E,OAAOC,QAAU,SAAAC,GACfH,EAASG,OAIN,kBAAC,EAAD,OCLWC,QACW,cAA7BH,OAAOI,SAASC,UAEe,UAA7BL,OAAOI,SAASC,UAEhBL,OAAOI,SAASC,SAASC,MAAM,2DCXnCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,mBEpI5BC,EAAOC,QAAU,CAAC,IAAM,mB","file":"static/js/main.3abd847c.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\"\r\nimport { indigo as primary, deepPurple as secondary } from \"@material-ui/core/colors\"\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary,\r\n    secondary\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      \"Noto Sans KR\",\r\n    ].join(\",\")\r\n  }\r\n})\r\n","import React, { useState } from \"react\"\r\nimport MaterialAppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport InputBase from \"@material-ui/core/InputBase\"\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25)\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",  width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 120,\r\n      \"&:focus\": {\r\n        width: 200\r\n      }\r\n    }\r\n  }\r\n}))\r\n\r\nconst AppBar = ({ onSearch }) => {\r\n  const classes = useStyles()\r\n  const [searchText, setSearchText] = useState(\"\")\r\n\r\n  const title = \"마스크사자\"\r\n  const searchPlaceholder = \"건물, 지역 검색...\"\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MaterialAppBar position=\"fixed\">\r\n        <Toolbar>\r\n          {/*<IconButton*/}\r\n          {/*  edge=\"start\"*/}\r\n          {/*  className={classes.menuButton}*/}\r\n          {/*  color=\"inherit\"*/}\r\n          {/*  aria-label=\"open drawer\"*/}\r\n          {/*>*/}\r\n          {/*  <MenuIcon />*/}\r\n          {/*</IconButton>*/}\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            {title}\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder={searchPlaceholder}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onChange={e => setSearchText(e.target.value)}\r\n              value={searchText}\r\n              onKeyPress={e => {\r\n                const enterPressed = e.charCode === 13\r\n                if (enterPressed) {\r\n                  onSearch(searchText)\r\n                  e.target.blur();\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </MaterialAppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nAppBar.defaultProps = {\r\n  onSearch: () => {}\r\n}\r\n\r\nexport default AppBar\r\n","import React from \"react\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\"\r\nimport { GpsFixed, Autorenew } from \"@material-ui/icons\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toolbar: {\r\n    position: \"fixed\",\r\n    zIndex: 99999,\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(8),\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      top: theme.spacing(10),\r\n      right: theme.spacing(2)\r\n    }\r\n  }\r\n}))\r\n\r\nconst Toolbar = ({ pending, onLocationButtonClick, onRenewButtonClick }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.toolbar}>\r\n      <ButtonGroup\r\n        orientation=\"vertical\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        aria-label=\"outlined primary button group\"\r\n      >\r\n        <Button disabled={pending} onClick={() => onLocationButtonClick()}>\r\n          <GpsFixed />\r\n        </Button>\r\n\r\n        <Button disabled={pending} onClick={() => onRenewButtonClick()}>\r\n          <Autorenew />\r\n        </Button>\r\n      </ButtonGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nToolbar.defaultProps = {\r\n  onLocationButtonClick: () => {},\r\n  onRenewButtonClick: () => {}\r\n}\r\n\r\nexport default Toolbar\r\n","import axios from \"axios\"\r\n\r\nconst CancelToken = axios.CancelToken\r\nexport let cancelFetchShopsByBounds\r\n\r\nexport class Shop {\r\n  fetchShopsByBounds(lat, lng, radius) {\r\n    if (cancelFetchShopsByBounds) {\r\n      cancelFetchShopsByBounds()\r\n    }\r\n    return axios.get(\r\n      `https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=${lat}&lng=${lng}&m=${radius}`,\r\n      {\r\n        cancelToken: new CancelToken(c => {\r\n          cancelFetchShopsByBounds = c\r\n        })\r\n      }\r\n    )\r\n  }\r\n}\r\n","import { Shop } from \"./Shop\"\r\n\r\nclass API {\r\n  Shop =  new Shop()\r\n}\r\n\r\nexport default new API()\r\n","import React from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  info: {\r\n    position: \"fixed\",\r\n    zIndex: 9999,\r\n    backgroundColor: \"rgba(0,0,0,0.6)\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    width: 240,\r\n    height: 80,\r\n    marginTop: -40,\r\n    marginLeft: -120,\r\n    fontSize: 15\r\n  }\r\n}))\r\n\r\nconst Info = ({ message }) => {\r\n  const classes = useStyles()\r\n  return <div className={classes.info}>{message}</div>\r\n}\r\n\r\nexport default Info\r\n","import React from \"react\"\r\nimport { renderToStaticMarkup } from \"react-dom/server\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { indigo, red } from \"@material-ui/core/colors\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  normal: {\r\n    padding: theme.spacing(1),\r\n    backgroundColor: indigo[700],\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    minWidth: 40,\r\n  },\r\n  soldOut: {\r\n    padding: theme.spacing(1),\r\n    backgroundColor: red[500],\r\n    color: \"#fff\"\r\n  },\r\n  title: {\r\n    fontSize: 13,\r\n    fontWeight: 700\r\n  },\r\n  content: {\r\n    fontSize: 11\r\n  }\r\n}))\r\n\r\nconst ShopOverlay = ({\r\n  code, // 판매기관코드\r\n  name, // 판매기관명\r\n  type, // 판매처 유형 (약국: 01, 우체국: 02, 농협: 03)\r\n  addr, // 주소\r\n  tel, // 연락처\r\n  stock_d, // 입고일\r\n  stock_t, // 입고시간\r\n  stock_cnt, // 입고수량\r\n  sold_cnt, // 판매수량\r\n  remain_cnt, // 잔고수량\r\n  sold_out, // 완판여부\r\n  lat, // 위도\r\n  lng\r\n}) => {\r\n  const classes = useStyles()\r\n\r\n  const Tooltip = () => (\r\n    <div>\r\n      <Typography className={classes.title}>{name}</Typography>\r\n      <Typography className={classes.content} component=\"p\">\r\n        남은 수량: {remain_cnt}\r\n      </Typography>\r\n      <Typography className={classes.content} component=\"p\">\r\n        {tel}\r\n      </Typography>\r\n      <Typography className={classes.content} component=\"p\">\r\n        {addr}\r\n      </Typography>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div\r\n      data-shop-code={code}\r\n      className={classes.container}\r\n      data-tippy-content={renderToStaticMarkup(<Tooltip />)}\r\n    >\r\n      {!sold_out && (\r\n        <Card className={classes.normal}>\r\n          <Typography className={classes.title}>{remain_cnt}개</Typography>\r\n        </Card>\r\n      )}\r\n      {sold_out && (\r\n        <Card className={classes.soldOut}>\r\n          <Typography className={classes.title}>품절</Typography>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShopOverlay\r\n","import React, { useCallback, useEffect, useState } from \"react\"\r\nimport { renderToStaticMarkup } from \"react-dom/server\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport AppBar from \"../appbar/AppBar\"\r\nimport Toolbar from \"./Toolbar\"\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\"\r\nimport API from \"../../api/API\"\r\nimport Info from \"../info/Info\"\r\nimport ShopOverlay from \"./ShopOverlay\"\r\nimport axios from \"axios\"\r\nimport tippy, { hideAll } from \"tippy.js\"\r\nimport \"tippy.js/dist/tippy.css\"\r\nimport { cancelFetchShopsByBounds } from \"../../api/Shop\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  map: {\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  },\r\n  progress: {\r\n    position: \"fixed\",\r\n    zIndex: 9999,\r\n    width: \"100%\"\r\n  }\r\n}))\r\n\r\nconst Map = () => {\r\n  const [pending, setPending] = useState(true)\r\n  const [kakao] = useState(window.kakao)\r\n  const [map, setMap] = useState(null)\r\n  const [bounds, setBounds] = useState(null)\r\n  const [info, setInfo] = useState(\"\")\r\n  const classes = useStyles()\r\n  const debouncedBounds = useDebounce(bounds, 300)\r\n\r\n  const getBounds = useCallback(() => {\r\n    return map.getBounds()\r\n  }, [map])\r\n\r\n  /**\r\n   * 장소 검색\r\n   * @param keyword 검색어\r\n   */\r\n  const searchPlace = keyword => {\r\n    setPending(true)\r\n    const places = new kakao.maps.services.Places()\r\n    places.keywordSearch(keyword, (result, status) => {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        const firstItem = result[0]\r\n        const { x, y } = firstItem\r\n        const moveLatLng = new kakao.maps.LatLng(y, x)\r\n        map.panTo(moveLatLng)\r\n        map.setLevel(3)\r\n      } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n        alert(\"검색 결과가 없습니다.\")\r\n      } else {\r\n        alert(\"서비스에 문제가 발생했습니다. 잠시 후 다시 시도해주세요.\")\r\n      }\r\n      setPending(false)\r\n    })\r\n  }\r\n\r\n  const getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      setPending(true)\r\n      navigator.geolocation.getCurrentPosition(\r\n        position => {\r\n          const { coords } = position\r\n          const { latitude, longitude } = coords\r\n          const moveLatLng = new kakao.maps.LatLng(latitude, longitude)\r\n          map.panTo(moveLatLng)\r\n          setBounds(getBounds())\r\n          setPending(false)\r\n        },\r\n        () => {\r\n          setPending(false)\r\n          alert(\"위치를 불러올 수 없습니다.\")\r\n        }\r\n      )\r\n    } else {\r\n      alert(\"위치를 불러올 수 없습니다.\")\r\n      setPending(false)\r\n    }\r\n  }\r\n\r\n  const renew = () => {\r\n    const level = map.getLevel()\r\n    if (level <= 6) {\r\n      setBounds(getBounds())\r\n    }\r\n  }\r\n\r\n  const removeAllShopOverlays = () => {\r\n    document.querySelectorAll(\"[data-shop-code]\").forEach(e => e.parentNode.removeChild(e))\r\n  }\r\n\r\n  const setShopOverlays = shops =>\r\n    setTimeout(() => {\r\n      removeAllShopOverlays()\r\n      shops.forEach(shop => {\r\n        const {\r\n          // code, // 판매기관코드\r\n          // name, // 판매기관명\r\n          // type, // 판매처 유형 (약국: 01, 우체국: 02, 농협: 03)\r\n          // addr, // 주소\r\n          // tel, // 연락처\r\n          // stock_d, // 입고일\r\n          // stock_t, // 입고시간\r\n          // stock_cnt, // 입고수량\r\n          // sold_cnt, // 판매수량\r\n          // remain_cnt, // 잔고수량\r\n          // sold_out, // 완판여부\r\n          lat, // 위도\r\n          lng // 경도\r\n        } = shop\r\n\r\n        const overlay = new kakao.maps.CustomOverlay({\r\n          map,\r\n          clickable: true,\r\n          position: new kakao.maps.LatLng(lat, lng),\r\n          content: renderToStaticMarkup(<ShopOverlay {...shop} />),\r\n          zIndex: 99999\r\n        })\r\n        overlay.setMap(map)\r\n        tippy(\"[data-tippy-content]\", { allowHTML: true })\r\n      })\r\n    }, 0)\r\n\r\n  const handleSearch = searchText => {\r\n    if (searchText) {\r\n      searchPlace(searchText)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"map\") //지도를 담을 영역의 DOM 레퍼런스\r\n    const options = {\r\n      //지도를 생성할 때 필요한 기본 옵션\r\n      center: new kakao.maps.LatLng(37.4019528117587, 127.10828323199647), //지도의 중심좌표.\r\n      level: 5 //지도의 레벨(확대, 축소 정도)\r\n    }\r\n\r\n    const map = new kakao.maps.Map(container, options) //지도 생성 및 객체 리턴\r\n    setMap(map)\r\n    setPending(false)\r\n  }, [kakao.maps])\r\n\r\n  useEffect(() => {\r\n    const onChange = function() {\r\n      const level = map.getLevel()\r\n      if (level <= 6) {\r\n        setBounds(getBounds())\r\n        setInfo(\"\")\r\n      } else {\r\n        removeAllShopOverlays()\r\n        if (cancelFetchShopsByBounds) {\r\n          cancelFetchShopsByBounds()\r\n          setPending(false)\r\n        }\r\n        setInfo(\"지도를 좀 더 확대해주세요\")\r\n      }\r\n    }\r\n\r\n    if (map) {\r\n      getLocation()\r\n      kakao.maps.event.addListener(map, \"tilesloaded\", onChange)\r\n      kakao.maps.event.addListener(map, \"zoom_start\", () => {\r\n        hideAll()\r\n      })\r\n      kakao.maps.event.addListener(map, \"dragstart\", () => {\r\n        hideAll()\r\n      })\r\n    }\r\n  }, [map])\r\n\r\n  useEffect(() => {\r\n    if (bounds) {\r\n      // 남서쪽\r\n\r\n      // const swBounds = bounds.getSouthWest()\r\n      // // 북동쪽\r\n      // const neBounds = bounds.getNorthEast()\r\n      //\r\n      // const { Ga: lon1, Ha: lat1 } = swBounds\r\n      // const { Ga: lon2, Ha: lat2 } = neBounds\r\n\r\n      const center = map.getCenter()\r\n      const { Ha: lat, Ga: lng } = center\r\n      const level = map.getLevel()\r\n      const radius = (level + 1) * 200\r\n      setPending(true)\r\n\r\n      API.Shop.fetchShopsByBounds(lat, lng, radius)\r\n        .then(response => {\r\n          const shops = response.data.stores\r\n          console.log(response.data)\r\n          setShopOverlays(shops)\r\n          setPending(false)\r\n        })\r\n        .catch(thrown => {\r\n          if (!axios.isCancel(thrown)) {\r\n            setPending(false)\r\n          }\r\n        })\r\n    }\r\n  }, [debouncedBounds])\r\n\r\n  return (\r\n    <>\r\n      <AppBar onSearch={handleSearch} />\r\n      <Toolbar pending={pending} onLocationButtonClick={getLocation} onRenewButtonClick={renew} />\r\n      {pending && (\r\n        <>\r\n          <LinearProgress color=\"secondary\" className={classes.progress} />\r\n          <div className={classes.dimmer} />\r\n        </>\r\n      )}\r\n      {info && <Info message={info} />}\r\n      <div id=\"map\" className={classes.map} />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value)\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value)\r\n    }, delay)\r\n\r\n    return () => {\r\n      clearTimeout(handler)\r\n    }\r\n  }, [value, delay])\r\n\r\n  return debouncedValue\r\n}\r\nexport default Map\r\n","import React from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    zIndex: 9999,\r\n    right: 0,\r\n    bottom: 0,\r\n    width: 200,\r\n    fontSize: 11,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"right\"\r\n  }\r\n}))\r\n\r\nconst About = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>개발: 정현승</div>\r\n      <div>문의: ahribori@gmail.com</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React, { useState } from \"react\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport DialogActions from \"@material-ui/core/DialogActions\"\r\nimport DialogContent from \"@material-ui/core/DialogContent\"\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\r\nimport Dialog from \"@material-ui/core/Dialog\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nconst ErrorNotice = () => {\r\n  const [open, setOpen] = useState(true)\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">서비스 중지중</DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"body2\" gutterBottom style={{ fontSize: 13 }}>\r\n          제한량이 초과되어 서비스 중지중입니다.\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          확인\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default ErrorNotice\r\n","import React, { useState } from \"react\"\r\nimport { ThemeProvider } from \"@material-ui/core/styles\"\r\nimport { theme } from \"./theme\"\r\nimport classes from \"./App.module.css\"\r\nimport Map from \"./components/map\"\r\nimport About from \"./components/about/About\"\r\nimport Notice from \"./components/notice/Notice\"\r\nimport ErrorNotice from \"./components/notice/ErrorNotice\"\r\n\r\nfunction App() {\r\n  const [error, setError] = useState(null)\r\n  useState(() => {\r\n    window.onerror = err => {\r\n      setError(err)\r\n    }\r\n  })\r\n\r\n  return <ErrorNotice />\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.App}>\r\n        <Map />\r\n        <About />\r\n        <Notice />\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\")\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\")\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\"No internet connection found. App is running in offline mode.\")\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister()\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3jZN5\"};"],"sourceRoot":""}